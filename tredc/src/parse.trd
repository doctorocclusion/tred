def Expr item list;
def Comment str;
def Name str;
def Tuple item list;
def Regex str;
def StrLiteral str;
def Block list;

stat white_m /[\s\n\r]*/;

stat blank_m /[\s\n\r]+/;

stat name_m {
    not "_";
    capture val;
    /[\w_]+/;
    export Name(val);
};

stat tuple_m {
    not "_";
    capture name;
    /[\w_]+/;
    stop name;

    into args;
    "(";
    white_m;
    some {
        into export;
        value_m;
    } blank_m;
    white_m;
    ")";

    export Tuple(Name(name) args);
};

stat strlit_m {
    "\"";
    capture val;
    /([^"\\]|(\\.))*/;
    export StrLiteral(val);
    "\"";
};

stat regex_m {
    "/";
    capture val;
    /([^\/\\]|(\\.))*/;
    export Regex(val);
    "/";
};

stat block_m {
    into exps;
    "{";
    some line_m;
    "}";

    export Block(exps);
};

stat comment_m {
    "//";
    /\s*/;
    capture com;
    /[^\n]*/;
    export Comment(com);
};

stat value_m {
    into export;
    or strlit_m regex_m block_m tuple_m name_m;
};

stat exp_m {
    into_once op;
    value_m;
    stop op;

    into args;
    some {
        into export;
        blank_m;
        value_m;
    };

    white_m;
    ";";

    export Expr(op args);
};

stat line_m {
    into export;
    or blank_m comment_m exp_m;
};

into export;
all line_m;